{"version":3,"file":"jsreport.module.js","sources":["../src/jsreport.js"],"sourcesContent":["/* globals jsreportInit */\nimport { saveAs } from 'file-saver'\n\nclass RenderResponse {\n  constructor (res) {\n    this._response = res\n  }\n\n  /**\n   * Return the fetch original response\n   */\n  get response () {\n    return this._response\n  }\n\n  /**\n   * Returns Promise<string> content of the response\n   * @returns {Promise<string>}\n   */\n  async toString () {\n    const blob = await this.response.blob()\n    return blob.text()\n  }\n\n  /**\n   * Invoke save of the output content as the file\n   * @param {string} afilename  - filename to save the file as\n   */\n  async download (afilename) {\n    const blob = await this.response.blob()\n    saveAs(blob, afilename)\n  }\n\n  /**\n   * Returns Promise<Blob> content of the response\n   * @returns {Promise<Blob>}\n   */\n  async toBlob () {\n    return this.response.blob()\n  }\n\n  /**\n   *  Return Promise<string> data URI of the response\n   * @returns {Promise<string>}\n   */\n  async toDataURI () {\n    const reader = new FileReader()\n    const blob = await this.response.blob()\n    return new Promise((resolve) => {\n      reader.onload = function (e) {\n        resolve(reader.result)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  /**\n   * Opens the response content in a new browser window\n   * @param {Object} options - optinal configs passed to the window.open\n   * @param {string} options.windowName - name of the window\n   * @param {string} options.windowFeatures - features of the window\n   * @param {Number} options.cleanInterval - how often to check if the window is closed to clean up the object URL\n   * @returns {Promise<Window}\n   */\n  async openInWindow ({\n    cleanInterval = 5000,\n    windowName,\n    windowFeatures\n  } = { }) {\n    const blob = await this.response.blob()\n    const objectURL = URL.createObjectURL(blob, windowName, windowFeatures)\n    const w = window.open(objectURL)\n    const interval = setInterval(() => {\n      if (w.closed) {\n        URL.revokeObjectURL(objectURL)\n        clearInterval(interval)\n      }\n    }, cleanInterval)\n    return w\n  }\n\n  /**\n   * Return the response as object URL. Remember you need to revoke the object URL when you are done with it\n   * @returns {Promise<string>}\n   */\n  async toObjectURL () {\n    const blob = await this.response.blob()\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass JsReportClient {\n  constructor () {\n    this.headers = {}\n  }\n\n  async _jsreportRequest ({ method, path, body }) {\n    if (!this.serverUrl) {\n      throw new Error('The script was not linked from jsreport. You need to fill jsreport.serverUrl property with valid url to jsreport server.')\n    }\n\n    let res\n    try {\n      res = await fetch(this.serverUrl + path, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.headers\n        },\n        body: body != null ? JSON.stringify(body) : null,\n        method\n      })\n    } catch (e) {\n      throw new Error('Failed to connect to jsreport server.')\n    }\n\n    if (!res.ok) {\n      let error = {\n        message: `jsreport server responded with error. status text: ${res.statusText}, status code: ${res.status}`\n      }\n      try {\n        const blob = await res.blob()\n        const text = await blob.text()\n        const remoteError = JSON.parse(text)\n        error = {\n          ...remoteError,\n          message: `${error.message}, details: ${remoteError.message}`\n        }\n      } catch (e) {\n\n      }\n      const returnError = new Error(error.message)\n      Object.assign(returnError, {\n        status: res.status,\n        statusText: res.statusText,\n        error\n      })\n      throw returnError\n    }\n\n    return res\n  }\n\n  /**\n   * Render report in remote server\n   * @param {RenderRequest} renderRequest\n   * @returns {Promise<RenderResponse>}\n   */\n  async render (renderRequest) {\n    const res = await this._jsreportRequest({ method: 'POST', path: '/api/report', body: renderRequest })\n    return new RenderResponse(res)\n  }\n\n  /**\n   * Create new instance of the client, this is rarely needed and you can use the default in the most of the cases\n   * @returns {JsReportClient}\n   */\n  createClient () {\n    return new JsReportClient()\n  }\n}\n\nconst jsreportInstance = new JsReportClient()\nsetTimeout(function () {\n  if (window.jsreportInit !== undefined) {\n    jsreportInit(jsreportInstance)\n  }\n}, 0)\n\nexport default jsreportInstance\n"],"names":["_catch","body","recover","result","e","then","RenderResponse","res","this","_response","toString","response","blob","text","download","afilename","saveAs","toBlob","toDataURI","reader","FileReader","Promise","resolve","onload","readAsDataURL","openInWindow","cleanInterval","windowName","windowFeatures","objectURL","URL","createObjectURL","w","window","open","interval","setInterval","closed","revokeObjectURL","clearInterval","toObjectURL","jsreportInstance","headers","_jsreportRequest","method","path","ok","returnError","Error","error","message","Object","assign","status","statusText","remoteError","JSON","parse","_this14","serverUrl","fetch","stringify","render","renderRequest","createClient","JsReportClient","setTimeout","undefined","jsreportInit"],"mappings":"4zFAkjBO,SAASA,EAAOC,EAAMC,GAC5B,IACC,IAAIC,EAASF,IACZ,MAAMG,GACP,OAAOF,EAAQE,GAEhB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,MAxjBFG,0BACJ,WAAaC,GACXC,KAAKC,UAAYF,+BAcbG,+CACeF,KAAKG,SAASC,sBAA3BA,GACN,OAAOA,EAAKC,+CAORC,kBAAUC,8BACKP,KAAKG,SAASC,sBAA3BA,GACNI,SAAOJ,EAAMG,2CAOTE,sBACJ,uBAAOT,KAAKG,SAASC,8CAOjBM,6BACEC,EAAS,IAAIC,WADF,uBAEEZ,KAAKG,SAASC,sBAA3BA,GACN,WAAWS,QAAQ,SAACC,GAClBH,EAAOI,OAAS,SAAUnB,GACxBkB,EAAQH,EAAOhB,SAEjBgB,EAAOK,cAAcZ,6CAYnBa,0CAIF,SAHFC,cAAAA,aAAgB,MAChBC,IAAAA,WACAC,IAAAA,0CAEmBpB,KAAKG,SAASC,sBAA3BA,GACN,IAAMiB,EAAYC,IAAIC,gBAAgBnB,EAAMe,EAAYC,GAClDI,EAAIC,OAAOC,KAAKL,GAChBM,EAAWC,YAAY,WACvBJ,EAAEK,SACJP,IAAIQ,gBAAgBT,GACpBU,cAAcJ,KAEfT,GACH,OAAOM,0CAOHQ,kDACehC,KAAKG,SAASC,aAC1BkB,IAAIC,6EA5Eb,WACE,YAAYtB,wMAqJVgC,EAAmB,4BArEvB,aACEjC,KAAKkC,QAAU,8BAGXC,iCAAoBC,IAAAA,OAAQC,IAAAA,KAAM5C,IAAAA,aAKlCM,IAJCC,wCAkBAD,EAAIuC,qBAeP,IAAMC,EAAc,IAAIC,MAAMC,EAAMC,SAMpC,MALAC,OAAOC,OAAOL,EAAa,CACzBM,OAAQ9C,EAAI8C,OACZC,WAAY/C,EAAI+C,WAChBL,MAAAA,IAEIF,GApBFE,EAAQ,CACVC,8DAA+D3C,EAAI+C,6BAA4B/C,EAAI8C,8CAGhF9C,EAAIK,sBAAjBA,0BACaA,EAAKC,sBAAlBA,GACN,IAAM0C,EAAcC,KAAKC,MAAM5C,GAC/BoC,OACKM,GACHL,QAAYD,EAAMC,sBAAqBK,EAAYL,2GAclD3C,IAAAA,GA1CP,IAAKmD,EAAKC,UACR,UAAUX,MAAM,4HAF4B,0CAOhCY,MAAMF,EAAKC,UAAYd,EAAM,CACvCH,WACE,eAAgB,oBACbgB,EAAKhB,SAEVzC,KAAc,MAARA,EAAeuD,KAAKK,UAAU5D,GAAQ,KAC5C2C,OAAAA,sBANFrC,kBASA,UAAUyC,MAAM,iIAmCdc,gBAAQC,8BACMvD,KAAKmC,iBAAiB,CAAEC,OAAQ,OAAQC,KAAM,cAAe5C,KAAM8D,mBAA/ExD,GACN,WAAWD,EAAeC,2CAO5ByD,aAAA,WACE,WAAWC,SAKfC,WAAW,gBACmBC,IAAxBlC,OAAOmC,cACTA,aAAa3B,IAEd"}