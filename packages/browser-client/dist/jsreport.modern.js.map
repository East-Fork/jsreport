{"version":3,"file":"jsreport.modern.js","sources":["../src/jsreport.js"],"sourcesContent":["/* globals jsreportInit */\nimport { saveAs } from 'file-saver'\n\nclass RenderResponse {\n  constructor (res) {\n    this._response = res\n  }\n\n  /**\n   * Return the fetch original response\n   */\n  get response () {\n    return this._response\n  }\n\n  /**\n   * Returns Promise<string> content of the response\n   * @returns {Promise<string>}\n   */\n  async toString () {\n    const blob = await this.response.blob()\n    return blob.text()\n  }\n\n  /**\n   * Invoke save of the output content as the file\n   * @param {string} afilename  - filename to save the file as\n   */\n  async download (afilename) {\n    const blob = await this.response.blob()\n    saveAs(blob, afilename)\n  }\n\n  /**\n   * Returns Promise<Blob> content of the response\n   * @returns {Promise<Blob>}\n   */\n  async toBlob () {\n    return this.response.blob()\n  }\n\n  /**\n   *  Return Promise<string> data URI of the response\n   * @returns {Promise<string>}\n   */\n  async toDataURI () {\n    const reader = new FileReader()\n    const blob = await this.response.blob()\n    return new Promise((resolve) => {\n      reader.onload = function (e) {\n        resolve(reader.result)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  /**\n   * Opens the response content in a new browser window\n   * @param {Object} options - optinal configs passed to the window.open\n   * @param {string} options.windowName - name of the window\n   * @param {string} options.windowFeatures - features of the window\n   * @param {Number} options.cleanInterval - how often to check if the window is closed to clean up the object URL\n   * @returns {Promise<Window}\n   */\n  async openInWindow ({\n    cleanInterval = 5000,\n    windowName,\n    windowFeatures\n  } = { }) {\n    const blob = await this.response.blob()\n    const objectURL = URL.createObjectURL(blob, windowName, windowFeatures)\n    const w = window.open(objectURL)\n    const interval = setInterval(() => {\n      if (w.closed) {\n        URL.revokeObjectURL(objectURL)\n        clearInterval(interval)\n      }\n    }, cleanInterval)\n    return w\n  }\n\n  /**\n   * Return the response as object URL. Remember you need to revoke the object URL when you are done with it\n   * @returns {Promise<string>}\n   */\n  async toObjectURL () {\n    const blob = await this.response.blob()\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass JsReportClient {\n  constructor () {\n    this.headers = {}\n  }\n\n  async _jsreportRequest ({ method, path, body }) {\n    if (!this.serverUrl) {\n      throw new Error('The script was not linked from jsreport. You need to fill jsreport.serverUrl property with valid url to jsreport server.')\n    }\n\n    let res\n    try {\n      res = await fetch(this.serverUrl + path, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.headers\n        },\n        body: body != null ? JSON.stringify(body) : null,\n        method\n      })\n    } catch (e) {\n      throw new Error('Failed to connect to jsreport server.')\n    }\n\n    if (!res.ok) {\n      let error = {\n        message: `jsreport server responded with error. status text: ${res.statusText}, status code: ${res.status}`\n      }\n      try {\n        const blob = await res.blob()\n        const text = await blob.text()\n        const remoteError = JSON.parse(text)\n        error = {\n          ...remoteError,\n          message: `${error.message}, details: ${remoteError.message}`\n        }\n      } catch (e) {\n\n      }\n      const returnError = new Error(error.message)\n      Object.assign(returnError, {\n        status: res.status,\n        statusText: res.statusText,\n        error\n      })\n      throw returnError\n    }\n\n    return res\n  }\n\n  /**\n   * Render report in remote server\n   * @param {RenderRequest} renderRequest\n   * @returns {Promise<RenderResponse>}\n   */\n  async render (renderRequest) {\n    const res = await this._jsreportRequest({ method: 'POST', path: '/api/report', body: renderRequest })\n    return new RenderResponse(res)\n  }\n\n  /**\n   * Create new instance of the client, this is rarely needed and you can use the default in the most of the cases\n   * @returns {JsReportClient}\n   */\n  createClient () {\n    return new JsReportClient()\n  }\n}\n\nconst jsreportInstance = new JsReportClient()\nsetTimeout(function () {\n  if (window.jsreportInit !== undefined) {\n    jsreportInit(jsreportInstance)\n  }\n}, 0)\n\nexport default jsreportInstance\n"],"names":["RenderResponse","constructor","res","this","_response","response","async","blob","text","afilename","saveAs","reader","FileReader","Promise","resolve","onload","e","result","readAsDataURL","cleanInterval","windowName","windowFeatures","objectURL","URL","createObjectURL","w","window","open","interval","setInterval","closed","revokeObjectURL","clearInterval","JsReportClient","headers","method","path","body","serverUrl","Error","fetch","JSON","stringify","ok","error","message","statusText","status","remoteError","parse","returnError","Object","assign","renderRequest","_jsreportRequest","createClient","jsreportInstance","setTimeout","undefined","jsreportInit"],"mappings":"4zFAGA,MAAMA,EACJC,YAAaC,GACXC,KAAKC,UAAYF,EAMfG,eACF,YAAYD,UAOAE,iBAEZ,kBADwBD,SAASE,QACrBC,OAOAF,eAAEG,GACd,MAAMF,aAAkBF,SAASE,OACjCG,SAAOH,EAAME,GAOHH,eACV,YAAYD,SAASE,OAORD,kBACb,MAAMK,EAAS,IAAIC,WACbL,aAAkBF,SAASE,OACjC,WAAWM,QAASC,IAClBH,EAAOI,OAAS,SAAUC,GACxBF,EAAQH,EAAOM,SAEjBN,EAAOO,cAAcX,KAYPD,oBAAEa,cAClBA,EAAgB,IADEC,WAElBA,EAFkBC,eAGlBA,GACE,IACF,MAAMd,aAAkBF,SAASE,OAC3Be,EAAYC,IAAIC,gBAAgBjB,EAAMa,EAAYC,GAClDI,EAAIC,OAAOC,KAAKL,GAChBM,EAAWC,YAAY,KACvBJ,EAAEK,SACJP,IAAIQ,gBAAgBT,GACpBU,cAAcJ,KAEfT,GACH,OAAOM,EAOQnB,oBACf,MAAMC,aAAkBF,SAASE,OACjC,OAAOgB,IAAIC,gBAAgBjB,IAI/B,MAAM0B,EACJhC,cACEE,KAAK+B,QAAU,GAGK5B,wBAAE6B,OAAEA,EAAFC,KAAUA,EAAVC,KAAgBA,IACtC,IAAKlC,KAAKmC,UACR,UAAUC,MAAM,4HAGlB,IAAIrC,EACJ,IACEA,QAAYsC,MAAMrC,KAAKmC,UAAYF,EAAM,CACvCF,WACE,eAAgB,oBACb/B,KAAK+B,SAEVG,KAAc,MAARA,EAAeI,KAAKC,UAAUL,GAAQ,KAC5CF,OAAAA,IAEF,MAAOnB,GACP,UAAUuB,MAAM,yCAGlB,IAAKrC,EAAIyC,GAAI,CACX,IAAIC,EAAQ,CACVC,QAAU,sDAAqD3C,EAAI4C,4BAA4B5C,EAAI6C,UAErG,IACE,MAAMxC,QAAaL,EAAIK,OACjBC,QAAaD,EAAKC,OAClBwC,EAAcP,KAAKQ,MAAMzC,GAC/BoC,OACKI,GACHH,QAAU,GAAED,EAAMC,qBAAqBG,EAAYH,YAErD,MAAO7B,IAGT,MAAMkC,EAAc,IAAIX,MAAMK,EAAMC,SAMpC,MALAM,OAAOC,OAAOF,EAAa,CACzBH,OAAQ7C,EAAI6C,OACZD,WAAY5C,EAAI4C,WAChBF,MAAAA,IAEIM,EAGR,OAAOhD,EAQGI,aAAE+C,GACZ,MAAMnD,aAAiBoD,iBAAiB,CAAEnB,OAAQ,OAAQC,KAAM,cAAeC,KAAMgB,IACrF,WAAWrD,EAAeE,GAO5BqD,eACE,WAAWtB,GAITuB,MAAAA,EAAmB,IAAIvB,EAC7BwB,WAAW,gBACmBC,IAAxBhC,OAAOiC,cACTA,aAAaH,IAEd"}