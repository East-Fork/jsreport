function e(){return e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},e.apply(this,arguments)}var t,o,n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},r=(t=function(e,t){!function(){function t(e,t,o){var n=new XMLHttpRequest;n.open("GET",e),n.responseType="blob",n.onload=function(){i(n.response,t,o)},n.onerror=function(){console.error("could not download file")},n.send()}function o(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return 200<=t.status&&299>=t.status}function r(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(o){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var s="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,a=s.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),i=s.saveAs||("object"!=typeof window||window!==s?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(e,n,a){var i=s.URL||s.webkitURL,c=document.createElement("a");c.download=n=n||e.name||"download",c.rel="noopener","string"==typeof e?(c.href=e,c.origin===location.origin?r(c):o(c.href)?t(e,n,a):r(c,c.target="_blank")):(c.href=i.createObjectURL(e),setTimeout(function(){i.revokeObjectURL(c.href)},4e4),setTimeout(function(){r(c)},0))}:"msSaveOrOpenBlob"in navigator?function(e,n,s){if(n=n||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(function(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}(e,s),n);else if(o(e))t(e,n,s);else{var a=document.createElement("a");a.href=e,a.target="_blank",setTimeout(function(){r(a)})}}:function(e,o,n,r){if((r=r||open("","_blank"))&&(r.document.title=r.document.body.innerText="downloading..."),"string"==typeof e)return t(e,o,n);var i="application/octet-stream"===e.type,c=/constructor/i.test(s.HTMLElement)||s.safari,l=/CriOS\/[\d]+/.test(navigator.userAgent);if((l||i&&c||a)&&"undefined"!=typeof FileReader){var u=new FileReader;u.onloadend=function(){var e=u.result;e=l?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),r?r.location.href=e:location=e,r=null},u.readAsDataURL(e)}else{var d=s.URL||s.webkitURL,p=d.createObjectURL(e);r?r.location=p:location.href=p,r=null,setTimeout(function(){d.revokeObjectURL(p)},4e4)}});s.saveAs=i.saveAs=i,e.exports=i}()},t(o={exports:{}}),o.exports);class s{constructor(e){this._response=e}get response(){return this._response}async toString(){return(await this.response.blob()).text()}async download(e){const t=await this.response.blob();r.saveAs(t,e)}async toBlob(){return this.response.blob()}async toDataURI(){const e=new FileReader,t=await this.response.blob();return new Promise(o=>{e.onload=function(t){o(e.result)},e.readAsDataURL(t)})}async openInWindow({cleanInterval:e=5e3,windowName:t,windowFeatures:o}={}){const n=await this.response.blob(),r=URL.createObjectURL(n,t,o),s=window.open(r),a=setInterval(()=>{s.closed&&(URL.revokeObjectURL(r),clearInterval(a))},e);return s}async toObjectURL(){const e=await this.response.blob();return URL.createObjectURL(e)}}class a{constructor(){this.headers={}}async _jsreportRequest({method:t,path:o,body:n}){if(!this.serverUrl)throw new Error("The script was not linked from jsreport. You need to fill jsreport.serverUrl property with valid url to jsreport server.");let r;try{r=await fetch(this.serverUrl+o,{headers:e({"Content-Type":"application/json"},this.headers),body:null!=n?JSON.stringify(n):null,method:t})}catch(e){throw new Error("Failed to connect to jsreport server.")}if(!r.ok){let t={message:`jsreport server responded with error. status text: ${r.statusText}, status code: ${r.status}`};try{const o=await r.blob(),n=await o.text(),s=JSON.parse(n);t=e({},s,{message:`${t.message}, details: ${s.message}`})}catch(e){}const o=new Error(t.message);throw Object.assign(o,{status:r.status,statusText:r.statusText,error:t}),o}return r}async render(e){const t=await this._jsreportRequest({method:"POST",path:"/api/report",body:e});return new s(t)}createClient(){return new a}}const i=new a;setTimeout(function(){void 0!==window.jsreportInit&&jsreportInit(i)},0);export{i as default};
//# sourceMappingURL=jsreport.modern.js.map
