{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['react']\"","webpack:///./studio/ChangePasswordModal.js","webpack:///./studio/main_dev.js","webpack:///./studio/UserGroupsInfo.js","webpack:///./studio/UserEditor.js","webpack:///./studio/LogoutSettingsButton.js","webpack:///./studio/ChangePasswordSettingsButton.js","webpack:///./studio/ChangePasswordButton.js","webpack:///./studio/NewUserModal.js"],"names":["ChangePasswordModal","props","oldPasswordRef","React","createRef","newPassword1Ref","newPassword2Ref","state","entity","options","close","data","newPassword","current","value","needsOldPassword","oldPassword","Studio","api","post","shortid","setState","apiError","message","passwordError","authentication","isUserAdmin","user","isGroup","name","validatePassword","color","display","changePassword","Component","sharedComponents","NewUserModal","initializeListeners","unshift","get","response","tenant","isTenantAdmin","useEditorComponents","userInfo","isSuperAdmin","getReferences","users","groups","usersGroups","validateUserInfoProps","currentProp","targetProp","propsLabel","map","p","join","Error","groupInStore","find","u","isAdmin","userInStore","adminGroupsForUser","filter","g","length","push","v","updateEntity","target","checked","userIcon","addEntitySet","faIcon","visibleName","referenceAttributes","onNew","openModal","entityTreePosition","addEditorComponent","UserEditor","addToolbarComponent","ChangePasswordButton","entityTreeIconResolvers","__entitySet","ChangePasswordSettingsButton","faUserIcon","LogoutSettingsButton","UserGroupsInfo","groupsForUser","GroupsDisplay","handleOpenGroupTab","groupId","openTab","_id","groupsIcon","lastGroupIdx","idx","textDecoration","cursor","__isNew","password","onUpdate","resolveEntityTreeIconStyle","c","i","logoutRef","click","closeMenu","resolveUrl","tab","e","usernameRef","password1Ref","password2Ref","setTimeout","focus","key","createUser","defaults","Object","assign","userNameError","addExistingEntity","onNewEntity","validateUsername","handleKeyPress"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = Studio;","module.exports = Studio.libraries['react'];","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nclass ChangePasswordModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.oldPasswordRef = React.createRef()\n    this.newPassword1Ref = React.createRef()\n    this.newPassword2Ref = React.createRef()\n\n    this.state = {}\n  }\n\n  async changePassword () {\n    const { entity } = this.props.options\n    const { close } = this.props\n\n    try {\n      const data = {\n        newPassword: this.newPassword1Ref.current.value\n      }\n\n      if (this.needsOldPassword(entity)) {\n        data.oldPassword = this.oldPasswordRef.current.value\n      }\n\n      await Studio.api.post(`/api/users/${entity.shortid}/password`, { data: data })\n      this.newPassword1Ref.current.value = ''\n      this.newPassword2Ref.current.value = ''\n      close()\n    } catch (e) {\n      this.setState({ apiError: e.message })\n    }\n  }\n\n  validatePassword () {\n    this.setState(\n      {\n        passwordError: this.newPassword2Ref.current.value && this.newPassword2Ref.current.value !== this.newPassword1Ref.current.value,\n        apiError: null\n      })\n  }\n\n  needsOldPassword (entity) {\n    let needsOldPassword = true\n\n    if (Studio.authentication.isUserAdmin(Studio.authentication.user)) {\n      needsOldPassword = Studio.authentication.user.isGroup ? false : entity.name === Studio.authentication.user.name\n    }\n\n    return needsOldPassword\n  }\n\n  render () {\n    const { entity } = this.props.options\n\n    return (\n      <div>\n        {this.needsOldPassword(entity)\n          ? <div className='form-group'><label>old password</label><input type='password' autoComplete='off' ref={this.oldPasswordRef} /></div>\n          : ''}\n        <div className='form-group'>\n          <label>new password</label>\n          <input type='password' autoComplete='off' ref={this.newPassword1Ref} />\n        </div>\n        <div className='form-group'>\n          <label>new password verification</label>\n          <input type='password' autoComplete='off' ref={this.newPassword2Ref} onChange={() => this.validatePassword()} />\n        </div>\n        <div className='form-group'>\n          <span style={{ color: 'red', display: this.state.passwordError ? 'block' : 'none' }}>password doesn't match</span>\n          <span style={{ color: 'red', display: this.state.apiError ? 'block' : 'none' }}>{this.state.apiError}</span>\n        </div>\n        <div className='button-bar'>\n          <button className='button confirmation' onClick={() => this.changePassword()}>ok</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChangePasswordModal\n","import Studio from 'jsreport-studio'\nimport UserGroupsInfo from './UserGroupsInfo'\nimport UserEditor from './UserEditor.js'\nimport LogoutSettingsButton from './LogoutSettingsButton.js'\nimport ChangePasswordSettingsButton from './ChangePasswordSettingsButton.js'\nimport ChangePasswordButton from './ChangePasswordButton.js'\nimport NewUserModal from './NewUserModal.js'\n\nStudio.sharedComponents.NewUserModal = NewUserModal\n\n// we want to be at the front, because other extension like scheduling relies on loaded user\nStudio.initializeListeners.unshift(async () => {\n  const response = await Studio.api.get('/api/settings')\n\n  if (!response.tenant) {\n    // authentication not enabled in config\n    return\n  }\n\n  const isTenantAdmin = response.isTenantAdmin === true\n\n  Studio.authentication = {\n    user: response.tenant,\n    useEditorComponents: [],\n    isUserAdmin: (userInfo) => {\n      if (userInfo == null) {\n        return false\n      }\n\n      if (userInfo.isSuperAdmin) {\n        return true\n      }\n\n      const { users, usersGroups: groups } = Studio.getReferences()\n\n      const validateUserInfoProps = (data, props) => {\n        let currentProp\n\n        for (const targetProp of props) {\n          if (data[targetProp] == null || data[targetProp] === '') {\n            continue\n          }\n\n          currentProp = targetProp\n          break\n        }\n\n        if (currentProp == null) {\n          const propsLabel = props.map((p) => '.' + p).join(', ')\n          throw new Error(`Studio.authentication.isUserAdmin needs to have one of these ${propsLabel} properties on the user info param`)\n        }\n\n        return currentProp\n      }\n\n      if (users == null || groups == null) {\n        const targetProp = userInfo.isGroup ? '_id' : 'name'\n\n        validateUserInfoProps(userInfo, [targetProp])\n\n        // when we are checking the current user we return the result of isTenantAdmin\n        // which comes from server, this is useful when we call this check when the entitySets\n        // are not yet registered\n        if (userInfo[targetProp] === Studio.authentication.user[targetProp]) {\n          return isTenantAdmin\n        } else {\n          throw new Error('Could not find users or usersGroups entity sets')\n        }\n      }\n\n      const targetProp = validateUserInfoProps(userInfo, userInfo.isGroup ? ['_id'] : ['_id', 'shortid', 'name'])\n\n      if (userInfo.isGroup) {\n        const groupInStore = groups.find((u) => u[targetProp] === userInfo[targetProp])\n\n        if (groupInStore == null) {\n          return false\n        }\n\n        return groupInStore.isAdmin === true\n      } else {\n        const userInStore = users.find((u) => u[targetProp] === userInfo[targetProp])\n\n        if (userInStore == null) {\n          return false\n        }\n\n        if (userInStore.isAdmin) {\n          return true\n        }\n\n        const adminGroupsForUser = groups.filter((g) => {\n          const users = g.users || []\n          return g.isAdmin === true && users.find((u) => u.shortid === userInStore.shortid) != null\n        })\n\n        return adminGroupsForUser.length > 0\n      }\n    }\n  }\n\n  if (Studio.authentication.user.isSuperAdmin) {\n    Studio.authentication.useEditorComponents.push((user) => (\n      <div>\n        <h2>Admin Management</h2>\n        <div>\n          <div className='form-group'>\n            <label>Give admin privileges</label>\n            <input\n              type='checkbox'\n              checked={user.isAdmin === true}\n              onChange={(v) => Studio.updateEntity({ ...user, isAdmin: v.target.checked })}\n            />\n          </div>\n        </div>\n      </div>\n    ))\n  }\n\n  Studio.authentication.useEditorComponents.push((user) => (\n    <UserGroupsInfo user={user} />\n  ))\n\n  const userIcon = 'fa-user'\n\n  if (Studio.authentication.isUserAdmin(Studio.authentication.user)) {\n    Studio.addEntitySet({\n      name: 'users',\n      faIcon: userIcon,\n      visibleName: 'user',\n      referenceAttributes: ['isAdmin'],\n      onNew: (options) => Studio.openModal(NewUserModal, options),\n      entityTreePosition: 200\n    })\n\n    Studio.addEditorComponent('users', UserEditor)\n    Studio.addToolbarComponent(ChangePasswordButton)\n  }\n\n  Studio.entityTreeIconResolvers.push((entity) => {\n    if (entity.__entitySet === 'users') {\n      return Studio.authentication.isUserAdmin(entity) === true ? 'fa-user-circle-o' : userIcon\n    }\n  })\n\n  Studio.addToolbarComponent(ChangePasswordSettingsButton, 'settings')\n\n  Studio.addToolbarComponent(() => {\n    let faUserIcon\n\n    if (Studio.authentication.user.isGroup) {\n      faUserIcon = 'fa-users'\n    } else {\n      faUserIcon = Studio.authentication.isUserAdmin(Studio.authentication.user) ? 'fa-user-circle-o' : userIcon\n    }\n\n    return (\n      <div className='toolbar-button'>\n        <span><i className={`fa ${faUserIcon}`} />{Studio.authentication.user.name}</span>\n      </div>\n    )\n  }, 'settingsBottom')\n\n  Studio.addToolbarComponent(LogoutSettingsButton, 'settingsBottom')\n})\n","import { useCallback, useMemo } from 'react'\nimport Studio from 'jsreport-studio'\n\nfunction UserGroupsInfo (props) {\n  const { user } = props\n  const { usersGroups: groups } = Studio.getReferences()\n\n  const groupsForUser = useMemo(() => {\n    return groups.filter((g) => {\n      const users = g.users || []\n      return users.find((u) => u.shortid === user.shortid) != null\n    })\n  }, [groups])\n\n  return (\n    <div>\n      <h2>Groups</h2>\n      <div>\n        <div className='form-group'>\n          <GroupsDisplay groups={groupsForUser} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GroupsDisplay ({ groups }) {\n  const handleOpenGroupTab = useCallback(function handleOpenGroupTab (groupId) {\n    Studio.openTab({ _id: groupId })\n  }, [])\n\n  if (groups.length === 0) {\n    return (\n      <span>\n        <i>No groups assigned</i>\n      </span>\n    )\n  }\n\n  const groupsIcon = 'fa-users'\n  const lastGroupIdx = groups.length - 1\n\n  return (\n    <span>\n      <i className={`fa ${groupsIcon}`} />\n      &nbsp;\n      {groups.map((g, idx) => (\n        <span key={g.name}>\n          <span\n            onClick={() => handleOpenGroupTab(g._id)}\n            style={{ textDecoration: 'underline', cursor: 'pointer' }}\n          >\n            {g.name}\n          </span>\n          {idx !== lastGroupIdx ? ', ' : ''}\n        </span>\n      ))}\n    </span>\n  )\n}\n\nexport default UserGroupsInfo\n","import React, { Component } from 'react'\nimport ChangePasswordModal from './ChangePasswordModal.js'\nimport Studio from 'jsreport-studio'\n\nclass UserEditor extends Component {\n  componentDidMount () {\n    if (this.props.entity.__isNew && !this.props.entity.password) {\n      Studio.openModal(ChangePasswordModal, { entity: this.props.entity })\n    }\n  }\n\n  render () {\n    const { entity, onUpdate } = this.props\n    const userIcon = Studio.resolveEntityTreeIconStyle(entity)\n    const isAdmin = Studio.authentication.isUserAdmin(entity)\n\n    return (\n      <div className='custom-editor'>\n        <h1><i className={`fa ${userIcon}`} /> {entity.name}</h1>\n        {isAdmin && (\n          <div>\n            <b>Admin user</b>\n          </div>\n        )}\n        <div>\n          {Studio.authentication.useEditorComponents.map((c, i) => <div key={i}>{c(entity, onUpdate)}</div>)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UserEditor\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nclass LogoutSettingsButton extends Component {\n  constructor (props) {\n    super(props)\n\n    this.logoutRef = React.createRef()\n  }\n\n  render () {\n    return (\n      <div>\n        <div\n          onClick={() => {\n            this.logoutRef.current.click()\n            this.props.closeMenu()\n          }}\n          style={{ cursor: 'pointer' }}\n        >\n          <form method='POST' action={Studio.resolveUrl('/logout')}>\n            <input ref={this.logoutRef} type='submit' id='logoutBtn' style={{ display: 'none' }} />\n          </form>\n          <i className='fa fa-power-off' />Logout\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LogoutSettingsButton\n","import ChangePasswordModal from './ChangePasswordModal.js'\nimport Studio from 'jsreport-studio'\n\nconst ChangePasswordSettingsButton = (props) => {\n  if (Studio.authentication.user.isSuperAdmin || Studio.authentication.user.isGroup) {\n    return <span />\n  }\n\n  return (\n    <div>\n      <a\n        id='changePassword'\n        onClick={() => {\n          Studio.openModal(ChangePasswordModal, { entity: Studio.authentication.user })\n          props.closeMenu()\n        }}\n        style={{ cursor: 'pointer' }}\n      >\n        <i className='fa fa-key' />Change password\n      </a>\n    </div>\n  )\n}\n\nexport default ChangePasswordSettingsButton\n","import React, { Component } from 'react'\nimport ChangePasswordModal from './ChangePasswordModal.js'\nimport Studio from 'jsreport-studio'\n\nclass ChangePasswordButton extends Component {\n  render () {\n    if (\n      !this.props.tab ||\n      !this.props.tab.entity ||\n      this.props.tab.entity.__entitySet !== 'users' ||\n      // display change password always for super admin,\n      // and only if the current admin user opens its own user or a normal non-admin user\n      (\n        Studio.authentication.isUserAdmin(this.props.tab.entity) &&\n        (Studio.authentication.user.isGroup ||\n        this.props.tab.entity.name !== Studio.authentication.user.name) &&\n        !Studio.authentication.user.isSuperAdmin\n      )\n    ) {\n      return <span />\n    }\n\n    return (\n      <div>\n        <div\n          className='toolbar-button'\n          onClick={(e) => Studio.openModal(ChangePasswordModal, { entity: this.props.tab.entity })}\n        >\n          <i className='fa fa-key' />Change Password\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChangePasswordButton\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nclass NewUserModal extends Component {\n  constructor () {\n    super()\n\n    this.usernameRef = React.createRef()\n    this.password1Ref = React.createRef()\n    this.password2Ref = React.createRef()\n\n    this.state = {}\n  }\n\n  componentDidMount () {\n    setTimeout(() => this.usernameRef.current.focus(), 0)\n  }\n\n  handleKeyPress (e) {\n    if (e.key === 'Enter') {\n      this.createUser()\n    }\n  }\n\n  async createUser () {\n    let entity = {}\n\n    if (this.props.options.defaults != null) {\n      entity = Object.assign(entity, this.props.options.defaults)\n    }\n\n    if (!this.usernameRef.current.value) {\n      return this.setState({ userNameError: true })\n    }\n\n    if (!this.password1Ref.current.value) {\n      return this.setState({ passwordError: true })\n    }\n\n    entity.name = this.usernameRef.current.value\n    entity.password = this.password1Ref.current.value\n\n    try {\n      const response = await Studio.api.post('/odata/users', {\n        data: entity\n      })\n\n      response.__entitySet = 'users'\n\n      Studio.addExistingEntity(response)\n\n      if (this.props.options.onNewEntity) {\n        this.props.options.onNewEntity(response)\n      }\n\n      this.props.close()\n    } catch (e) {\n      this.setState({ apiError: e.message })\n    }\n  }\n\n  validatePassword () {\n    this.setState(\n      {\n        passwordError: this.password2Ref.current.value && this.password2Ref.current.value !== this.password1Ref.current.value,\n        apiError: null\n      })\n  }\n\n  validateUsername () {\n    this.setState(\n      {\n        userNameError: this.usernameRef.current.value === '',\n        apiError: null\n      })\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='form-group'>\n          <label>New user</label>\n        </div>\n        <div className='form-group'>\n          <label>username</label>\n          <input type='text' ref={this.usernameRef} onChange={() => this.validateUsername()} onKeyPress={(e) => this.handleKeyPress(e)} />\n        </div>\n        <div className='form-group'>\n          <label>password</label>\n          <input type='password' autoComplete='off' ref={this.password1Ref} />\n        </div>\n        <div className='form-group'>\n          <label>password verification</label>\n          <input type='password' autoComplete='off' ref={this.password2Ref} onChange={() => this.validatePassword()} />\n        </div>\n        <div className='form-group'>\n          <span style={{ color: 'red', display: this.state.passwordError ? 'block' : 'none' }}>password doesn't match</span>\n          <span\n            style={{ color: 'red', display: this.state.userNameError ? 'block' : 'none' }}\n          >username must be filled\n          </span>\n          <span style={{ color: 'red', display: this.state.apiError ? 'block' : 'none' }}>{this.state.apiError}</span>\n        </div>\n        <div className='button-bar'>\n          <button className='button confirmation' onClick={() => this.createUser()}>ok</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewUserModal\n"],"sourceRoot":""}