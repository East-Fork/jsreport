{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///./studio/main_dev.js","webpack:///./studio/HtmlToXlsxProperties.js","webpack:///external \"Studio.libraries['react']\""],"names":["Studio","addPropertiesComponent","Properties","entity","__entitySet","recipe","runListeners","push","request","entities","template","extensions","options","preview","enabled","showWarning","getSettingValueByKey","setSetting","openModal","EntityRefSelect","HtmlToXlsxProperties","Object","keys","filter","k","map","baseXlsxTemplate","shortid","htmlToXlsx","templateAssetShortid","foundItems","selectXlsxTemplates","e","foundAssets","selectAssets","length","name","props","applyDefaultsToEntity","bind","changeHtmlToXlsx","removeInvalidHtmlEngine","removeInvalidXlsxTemplateReferences","prevProps","_id","onChange","updatedXlsxTemplates","updatedXlsxAssets","htmlEngine","htmlEngines","isValidHtmlEngine","includes","entityNeedsDefault","__isNew","change","v","target","value","engine","references","data","assets","selected","xlsxTemplates","waitForJS","checked","Component"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,wB;;;;;;;;;ACAA;;;;AACA;;;;;;AAEAA,yBAAOC,sBAAP,CAA8B,cAA9B,EAA8CC,8BAA9C,EAA0D,UAACC,MAAD;AAAA,SAAYA,OAAOC,WAAP,KAAuB,WAAvB,IAAsCD,OAAOE,MAAP,KAAkB,cAApE;AAAA,CAA1D;;AAEAL,yBAAOM,YAAP,CAAoBC,IAApB,CAAyB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC9C,MAAID,QAAQE,QAAR,CAAiBL,MAAjB,KAA4B,cAAhC,EAAgD;AAC9C;AACD;;AAED,MAAIL,yBAAOW,UAAP,CAAkB,cAAlB,EAAkCC,OAAlC,CAA0CC,OAA1C,CAAkDC,OAAlD,KAA8D,KAAlE,EAAyE;AACvE;AACD;;AAED,MAAId,yBAAOW,UAAP,CAAkB,cAAlB,EAAkCC,OAAlC,CAA0CC,OAA1C,CAAkDE,WAAlD,KAAkE,KAAtE,EAA6E;AAC3E;AACD;;AAED,MAAIf,yBAAOgB,oBAAP,CAA4B,yBAA5B,EAAuD,KAAvD,MAAkE,IAAtE,EAA4E;AAC1E;AACD;;AAEDhB,2BAAOiB,UAAP,CAAkB,yBAAlB,EAA6C,IAA7C;;AAEAjB,2BAAOkB,SAAP,CAAiB;AAAA,WACf;AAAA;AAAA;AAAA;AAGE;AAAA;AAAA;AACE,gBAAK,yCADP;AAEE,kBAAO,QAFT;AAGE,eAAI;AAHN;AAAA;AAAA,OAHF;AAAA;AAAA,KADe;AAAA,GAAjB;AAaD,CAhCD,E;;;;;;;;;;;;;;;;;ACLA;;;;AACA;;;;;;;;;;;;AAEA,IAAMC,kBAAkBnB,yBAAOmB,eAA/B;;IAEMC,oB;;;;;wCACwBX,Q,EAAU;AACpC,aAAOY,OAAOC,IAAP,CAAYb,QAAZ,EAAsBc,MAAtB,CAA6B,UAACC,CAAD;AAAA,eAAOf,SAASe,CAAT,EAAYpB,WAAZ,KAA4B,eAAnC;AAAA,OAA7B,EAAiFqB,GAAjF,CAAqF,UAACD,CAAD;AAAA,eAAOf,SAASe,CAAT,CAAP;AAAA,OAArF,CAAP;AACD;;;iCAEoBf,Q,EAAU;AAC7B,aAAOY,OAAOC,IAAP,CAAYb,QAAZ,EAAsBc,MAAtB,CAA6B,UAACC,CAAD;AAAA,eAAOf,SAASe,CAAT,EAAYpB,WAAZ,KAA4B,QAAnC;AAAA,OAA7B,EAA0EqB,GAA1E,CAA8E,UAACD,CAAD;AAAA,eAAOf,SAASe,CAAT,CAAP;AAAA,OAA9E,CAAP;AACD;;;0BAEarB,M,EAAQM,Q,EAAU;AAC9B,UACE,CAAC,CAACN,OAAOuB,gBAAR,IAA4B,CAACvB,OAAOuB,gBAAP,CAAwBC,OAAtD,MACC,CAACxB,OAAOyB,UAAR,IAAsB,CAACzB,OAAOyB,UAAP,CAAkBC,oBAD1C,CADF,EAGE;AACA,eAAO,eAAP;AACD;;AAED,UAAMC,aAAaV,qBAAqBW,mBAArB,CAAyCtB,QAAzC,EAAmDc,MAAnD,CAA0D,UAACS,CAAD;AAAA,eAAO7B,OAAOuB,gBAAP,IAA2B,IAA3B,IAAmCvB,OAAOuB,gBAAP,CAAwBC,OAAxB,KAAoCK,EAAEL,OAAhF;AAAA,OAA1D,CAAnB;AACA,UAAMM,cAAcb,qBAAqBc,YAArB,CAAkCzB,QAAlC,EAA4Cc,MAA5C,CAAmD,UAACS,CAAD;AAAA,eAAO7B,OAAOyB,UAAP,IAAqB,IAArB,IAA6BzB,OAAOyB,UAAP,CAAkBC,oBAAlB,KAA2CG,EAAEL,OAAjF;AAAA,OAAnD,CAApB;;AAEA,UAAI,CAACG,WAAWK,MAAZ,IAAsB,CAACF,YAAYE,MAAvC,EAA+C;AAC7C,eAAO,eAAP;AACD;;AAED,UAAIC,aAAJ;;AAEA,UAAIH,YAAYE,MAAhB,EAAwB;AACtBC,eAAOH,YAAY,CAAZ,EAAeG,IAAtB;AACD,OAFD,MAEO;AACLA,eAAON,WAAW,CAAX,EAAcM,IAArB;AACD;;AAED,aAAO,oBAAoBA,IAA3B;AACD;;;AAED,gCAAaC,KAAb,EAAoB;AAAA;;AAAA,4IACZA,KADY;;AAGlB,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,OAA7B;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;AAJkB;AAKnB;;;;wCAEoB;AACnB,WAAKD,qBAAL,CAA2B,KAAKD,KAAhC;AACA,WAAKI,uBAAL;AACA,WAAKC,mCAAL;AACD;;;uCAEmBC,S,EAAW;AAC7B;AACA,UAAIA,UAAUxC,MAAV,CAAiByC,GAAjB,KAAyB,KAAKP,KAAL,CAAWlC,MAAX,CAAkByC,GAA/C,EAAoD;AAClD,aAAKN,qBAAL,CAA2B,KAAKD,KAAhC;AACD;;AAED,WAAKI,uBAAL;AACA,WAAKC,mCAAL;AACD;;;0DAEsC;AAAA,mBACE,KAAKL,KADP;AAAA,UAC7BlC,MAD6B,UAC7BA,MAD6B;AAAA,UACrBM,QADqB,UACrBA,QADqB;AAAA,UACXoC,QADW,UACXA,QADW;;;AAGrC,UAAI,CAAC1C,OAAOuB,gBAAR,IAA4B,CAACvB,OAAOyB,UAAxC,EAAoD;AAClD;AACD;;AAED,UAAMkB,uBAAuBzB,OAAOC,IAAP,CAAYb,QAAZ,EAAsBc,MAAtB,CAA6B,UAACC,CAAD;AAAA,eAAOf,SAASe,CAAT,EAAYpB,WAAZ,KAA4B,eAA5B,IAA+CD,OAAOuB,gBAAP,IAA2B,IAA1E,IAAkFjB,SAASe,CAAT,EAAYG,OAAZ,KAAwBxB,OAAOuB,gBAAP,CAAwBC,OAAzI;AAAA,OAA7B,CAA7B;AACA,UAAMoB,oBAAoB1B,OAAOC,IAAP,CAAYb,QAAZ,EAAsBc,MAAtB,CAA6B,UAACC,CAAD;AAAA,eAAOf,SAASe,CAAT,EAAYpB,WAAZ,KAA4B,QAA5B,IAAwCD,OAAOyB,UAAP,IAAqB,IAA7D,IAAqEnB,SAASe,CAAT,EAAYG,OAAZ,KAAwBxB,OAAOyB,UAAP,CAAkBC,oBAAtH;AAAA,OAA7B,CAA1B;;AAEA,UAAI1B,OAAOyB,UAAP,IAAqBzB,OAAOyB,UAAP,CAAkBC,oBAAvC,IAA+DkB,kBAAkBZ,MAAlB,KAA6B,CAAhG,EAAmG;AACjG,aAAKK,gBAAL,CAAsB,KAAKH,KAA3B,EAAkC;AAChCR,gCAAsB;AADU,SAAlC;AAGD;;AAED,UAAI1B,OAAOuB,gBAAP,IAA2BvB,OAAOuB,gBAAP,CAAwBC,OAAnD,IAA8DmB,qBAAqBX,MAArB,KAAgC,CAAlG,EAAqG;AACnGU,iBAAS,EAAED,KAAKzC,OAAOyC,GAAd,EAAmBlB,kBAAkB,IAArC,EAAT;AACD;AACF;;;8CAE0B;AAAA,UACjBvB,MADiB,GACN,KAAKkC,KADC,CACjBlC,MADiB;;;AAGzB,UAAI,CAACA,OAAOyB,UAAR,IAAsB,CAACzB,OAAOyB,UAAP,CAAkBoB,UAA7C,EAAyD;AACvD;AACD;;AAED,UAAMC,cAAcjD,yBAAOW,UAAP,CAAkB,cAAlB,EAAkCC,OAAlC,CAA0CqC,WAA9D;AACA,UAAMC,oBAAoBD,YAAYE,QAAZ,CAAqBhD,OAAOyB,UAAP,CAAkBoB,UAAvC,CAA1B;;AAEA,UAAI,CAACE,iBAAL,EAAwB;AACtB,aAAKV,gBAAL,CAAsB,KAAKH,KAA3B,EAAkC,EAAEW,YAAYC,YAAY,CAAZ,CAAd,EAAlC;AACD;AACF;;;0CAEsBZ,K,EAAO;AAAA,UACpBlC,MADoB,GACTkC,KADS,CACpBlC,MADoB;;AAE5B,UAAM8C,cAAcjD,yBAAOW,UAAP,CAAkB,cAAlB,EAAkCC,OAAlC,CAA0CqC,WAA9D;AACA,UAAIG,qBAAqB,KAAzB;;AAEA,UACEjD,OAAOkD,OAAP,IACClD,OAAOyB,UAAP,IAAqB,IAArB,IAA6BzB,OAAOyB,UAAP,CAAkBoB,UAAlB,IAAgC,IAFhE,EAGE;AACAI,6BAAqB,IAArB;AACD;;AAED,UAAIH,eAAe,IAAf,IAAuBA,YAAY,CAAZ,KAAkB,IAAzC,IAAiDG,kBAArD,EAAyE;AACvE,aAAKZ,gBAAL,CAAsBH,KAAtB,EAA6B;AAC3BW,sBAAYC,YAAY,CAAZ;AADe,SAA7B;AAGD;AACF;;;qCAEiBZ,K,EAAOiB,M,EAAQ;AAAA,UACvBnD,MADuB,GACFkC,KADE,CACvBlC,MADuB;AAAA,UACf0C,QADe,GACFR,KADE,CACfQ,QADe;;AAE/B,UAAMjB,aAAazB,OAAOyB,UAAP,IAAqB,EAAxC;;AAEAiB,4BACK1C,MADL;AAEEyB,iCAAiBA,UAAjB,EAAgC0B,MAAhC;AAFF;AAID;;;6BAES;AAAA;;AAAA,oBACqB,KAAKjB,KAD1B;AAAA,UACAlC,MADA,WACAA,MADA;AAAA,UACQ0C,SADR,WACQA,QADR;;AAER,UAAMjB,aAAazB,OAAOyB,UAAP,IAAqB,EAAxC;AACA,UAAMqB,cAAcjD,yBAAOW,UAAP,CAAkB,cAAlB,EAAkCC,OAAlC,CAA0CqC,WAA9D;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,oBAAf;AACE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AACE,qBAAOrB,WAAWoB,UADpB;AAEE,wBAAU,kBAACO,CAAD;AAAA,uBAAO,OAAKf,gBAAL,CAAsB,OAAKH,KAA3B,EAAkC,EAAEW,YAAYO,EAAEC,MAAF,CAASC,KAAvB,EAAlC,CAAP;AAAA;AAFZ;AAIGR,wBAAYxB,GAAZ,CAAgB,UAACiC,MAAD;AAAA,qBACf;AAAA;AAAA,kBAAQ,KAAKA,MAAb,EAAqB,OAAOA,MAA5B;AAAqCA;AAArC,eADe;AAAA,aAAhB;AAJH;AAFF,SADF;AAYE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,wCAAC,eAAD;AACE,0BAAa,sBADf;AAEE,oBAAQ,gBAACC,UAAD;AAAA,qBAAiB,EAAEC,MAAMD,WAAWE,MAAnB,EAAjB;AAAA,aAFV;AAGE,mBAAO1D,OAAOyB,UAAP,GAAoBzB,OAAOyB,UAAP,CAAkBC,oBAAtC,GAA6D,IAHtE;AAIE,sBAAU,kBAACiC,QAAD;AAAA,qBAAc,OAAKtB,gBAAL,CAAsB,OAAKH,KAA3B,EAAkC;AACxDR,sCAAsBiC,YAAY,IAAZ,IAAoBA,SAAS3B,MAAT,GAAkB,CAAtC,GAA0C2B,SAAS,CAAT,EAAYnC,OAAtD,GAAgE;AAD9B,eAAlC,CAAd;AAAA;AAJZ;AAFF,SAZF;AAuBE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,wCAAC,eAAD;AACE,0BAAa,sBADf;AAEE,oBAAQ,gBAACgC,UAAD;AAAA,qBAAiB,EAAEI,eAAeJ,WAAWI,aAA5B,EAAjB;AAAA,aAFV;AAGE,mBAAO5D,OAAOuB,gBAAP,GAA0BvB,OAAOuB,gBAAP,CAAwBC,OAAlD,GAA4D,IAHrE;AAIE,sBAAU,kBAACmC,QAAD;AAAA,qBAAcjB,UAAS,EAAED,KAAKzC,OAAOyC,GAAd,EAAmBlB,kBAAkBoC,YAAY,IAAZ,IAAoBA,SAAS3B,MAAT,GAAkB,CAAtC,GAA0C,EAAER,SAASmC,SAAS,CAAT,EAAYnC,OAAvB,EAA1C,GAA6E,IAAlH,EAAT,CAAd;AAAA;AAJZ;AAFF,SAvBF;AAgCGC,mBAAWoB,UAAX,KAA0B,SAA1B,IACC;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA,cAAO,OAAM,sCAAb;AAAA;AAAA,WADF;AAEE;AACE,kBAAK,UADP,EACkB,OAAM,sCADxB,EAC+D,SAASpB,WAAWoC,SAAX,KAAyB,IADjG;AAEE,sBAAU,kBAACT,CAAD;AAAA,qBAAO,OAAKf,gBAAL,CAAsB,OAAKH,KAA3B,EAAkC,EAAE2B,WAAWT,EAAEC,MAAF,CAASS,OAAtB,EAAlC,CAAP;AAAA;AAFZ;AAFF;AAjCJ,OADF;AA4CD;;;;EA5KgCC,gB;;kBA+KpB9C,oB;;;;;;ACpLf,2C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = Studio;","import Properties from './HtmlToXlsxProperties'\r\nimport Studio from 'jsreport-studio'\r\n\r\nStudio.addPropertiesComponent('html to xlsx', Properties, (entity) => entity.__entitySet === 'templates' && entity.recipe === 'html-to-xlsx')\r\n\r\nStudio.runListeners.push((request, entities) => {\r\n  if (request.template.recipe !== 'html-to-xlsx') {\r\n    return\r\n  }\r\n\r\n  if (Studio.extensions['html-to-xlsx'].options.preview.enabled === false) {\r\n    return\r\n  }\r\n\r\n  if (Studio.extensions['html-to-xlsx'].options.preview.showWarning === false) {\r\n    return\r\n  }\r\n\r\n  if (Studio.getSettingValueByKey('office-preview-informed', false) === true) {\r\n    return\r\n  }\r\n\r\n  Studio.setSetting('office-preview-informed', true)\r\n\r\n  Studio.openModal(() => (\r\n    <div>\r\n      We need to upload your office report to our publicly hosted server to be able to use\r\n      Office Online Service for previewing here in the studio. You can disable it in the configuration, see\r\n      <a\r\n        href='https://jsreport.net/learn/html-to-xlsx'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n      >\r\n        https://jsreport.net/learn/html-to-xlsx\r\n      </a> for details.\r\n    </div>\r\n  ))\r\n})\r\n","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\n\r\nconst EntityRefSelect = Studio.EntityRefSelect\r\n\r\nclass HtmlToXlsxProperties extends Component {\r\n  static selectXlsxTemplates (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates').map((k) => entities[k])\r\n  }\r\n\r\n  static selectAssets (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets').map((k) => entities[k])\r\n  }\r\n\r\n  static title (entity, entities) {\r\n    if (\r\n      (!entity.baseXlsxTemplate || !entity.baseXlsxTemplate.shortid) &&\r\n      (!entity.htmlToXlsx || !entity.htmlToXlsx.templateAssetShortid)\r\n    ) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    const foundItems = HtmlToXlsxProperties.selectXlsxTemplates(entities).filter((e) => entity.baseXlsxTemplate != null && entity.baseXlsxTemplate.shortid === e.shortid)\r\n    const foundAssets = HtmlToXlsxProperties.selectAssets(entities).filter((e) => entity.htmlToXlsx != null && entity.htmlToXlsx.templateAssetShortid === e.shortid)\r\n\r\n    if (!foundItems.length && !foundAssets.length) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    let name\r\n\r\n    if (foundAssets.length) {\r\n      name = foundAssets[0].name\r\n    } else {\r\n      name = foundItems[0].name\r\n    }\r\n\r\n    return 'xlsx template: ' + name\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.applyDefaultsToEntity = this.applyDefaultsToEntity.bind(this)\r\n    this.changeHtmlToXlsx = this.changeHtmlToXlsx.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.applyDefaultsToEntity(this.props)\r\n    this.removeInvalidHtmlEngine()\r\n    this.removeInvalidXlsxTemplateReferences()\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    // when component changes because another template is created\r\n    if (prevProps.entity._id !== this.props.entity._id) {\r\n      this.applyDefaultsToEntity(this.props)\r\n    }\r\n\r\n    this.removeInvalidHtmlEngine()\r\n    this.removeInvalidXlsxTemplateReferences()\r\n  }\r\n\r\n  removeInvalidXlsxTemplateReferences () {\r\n    const { entity, entities, onChange } = this.props\r\n\r\n    if (!entity.baseXlsxTemplate && !entity.htmlToXlsx) {\r\n      return\r\n    }\r\n\r\n    const updatedXlsxTemplates = Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates' && entity.baseXlsxTemplate != null && entities[k].shortid === entity.baseXlsxTemplate.shortid)\r\n    const updatedXlsxAssets = Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets' && entity.htmlToXlsx != null && entities[k].shortid === entity.htmlToXlsx.templateAssetShortid)\r\n\r\n    if (entity.htmlToXlsx && entity.htmlToXlsx.templateAssetShortid && updatedXlsxAssets.length === 0) {\r\n      this.changeHtmlToXlsx(this.props, {\r\n        templateAssetShortid: null\r\n      })\r\n    }\r\n\r\n    if (entity.baseXlsxTemplate && entity.baseXlsxTemplate.shortid && updatedXlsxTemplates.length === 0) {\r\n      onChange({ _id: entity._id, baseXlsxTemplate: null })\r\n    }\r\n  }\r\n\r\n  removeInvalidHtmlEngine () {\r\n    const { entity } = this.props\r\n\r\n    if (!entity.htmlToXlsx || !entity.htmlToXlsx.htmlEngine) {\r\n      return\r\n    }\r\n\r\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\r\n    const isValidHtmlEngine = htmlEngines.includes(entity.htmlToXlsx.htmlEngine)\r\n\r\n    if (!isValidHtmlEngine) {\r\n      this.changeHtmlToXlsx(this.props, { htmlEngine: htmlEngines[0] })\r\n    }\r\n  }\r\n\r\n  applyDefaultsToEntity (props) {\r\n    const { entity } = props\r\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\r\n    let entityNeedsDefault = false\r\n\r\n    if (\r\n      entity.__isNew ||\r\n      (entity.htmlToXlsx == null || entity.htmlToXlsx.htmlEngine == null)\r\n    ) {\r\n      entityNeedsDefault = true\r\n    }\r\n\r\n    if (htmlEngines != null && htmlEngines[0] != null && entityNeedsDefault) {\r\n      this.changeHtmlToXlsx(props, {\r\n        htmlEngine: htmlEngines[0]\r\n      })\r\n    }\r\n  }\r\n\r\n  changeHtmlToXlsx (props, change) {\r\n    const { entity, onChange } = props\r\n    const htmlToXlsx = entity.htmlToXlsx || {}\r\n\r\n    onChange({\r\n      ...entity,\r\n      htmlToXlsx: { ...htmlToXlsx, ...change }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { entity, onChange } = this.props\r\n    const htmlToXlsx = entity.htmlToXlsx || {}\r\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\r\n\r\n    return (\r\n      <div className='properties-section'>\r\n        <div className='form-group'>\r\n          <label>html engine</label>\r\n          <select\r\n            value={htmlToXlsx.htmlEngine}\r\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { htmlEngine: v.target.value })}\r\n          >\r\n            {htmlEngines.map((engine) => (\r\n              <option key={engine} value={engine}>{engine}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>xlsx asset</label>\r\n          <EntityRefSelect\r\n            headingLabel='Select xlsx template'\r\n            filter={(references) => ({ data: references.assets })}\r\n            value={entity.htmlToXlsx ? entity.htmlToXlsx.templateAssetShortid : null}\r\n            onChange={(selected) => this.changeHtmlToXlsx(this.props, {\r\n              templateAssetShortid: selected != null && selected.length > 0 ? selected[0].shortid : null\r\n            })}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>xlsx template (deprecated)</label>\r\n          <EntityRefSelect\r\n            headingLabel='Select xlsx template'\r\n            filter={(references) => ({ xlsxTemplates: references.xlsxTemplates })}\r\n            value={entity.baseXlsxTemplate ? entity.baseXlsxTemplate.shortid : null}\r\n            onChange={(selected) => onChange({ _id: entity._id, baseXlsxTemplate: selected != null && selected.length > 0 ? { shortid: selected[0].shortid } : null })}\r\n          />\r\n        </div>\r\n        {htmlToXlsx.htmlEngine !== 'cheerio' && (\r\n          <div className='form-group'>\r\n            <label title='window.JSREPORT_READY_TO_START=true;'>wait for conversion trigger</label>\r\n            <input\r\n              type='checkbox' title='window.JSREPORT_READY_TO_START=true;' checked={htmlToXlsx.waitForJS === true}\r\n              onChange={(v) => this.changeHtmlToXlsx(this.props, { waitForJS: v.target.checked })}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HtmlToXlsxProperties\r\n","module.exports = Studio.libraries['react'];"],"sourceRoot":""}