problems (somehow solved):
- SES_HTML_COMMENT_REJECTED when running docx recipe with students showcase, had to disable the line in the SES
- docx doesnt work because of some hacky code in xmldom => need to require xmldom upfront before lockdown
- html-to-xlsx needs to require unzipper before the lockdown
- chrome needs to require puppeteer at the beginning
- jsrender needs lockdown option overrideTaming: 'severe'
- xlsx, html-to-xlsx needs to use in helpers globalThis instead of this
- pdfjs parser doesnt work in lockdown so parsing pdf returns empty results => preload pdfjs in worker before lockdown with require('pdfjs-dist/legacy/build/pdf.js').getDocument(Buffer.from([])).promise.catch(() => {})

todo (top down order):
- [x] all tests should be green
- [x] fork SES and remove the rejectHtmlComments a no-op, also alias the logging done there to a no-op so we don't end with logs that we don't care
- [x] see if we need to harden() the values send to the context in the sandbox
  (we are not going to use it, it is harmless for our case, because we create new compartment per render and the
  values shared are short-lived only per render. the values that are long-lived are cached templates,
  however this is never exposed as a direct callable thing to the user.
  when the system helpers compilation is back it is not going to be a problem because the compiled code is what is cached
  which is different to the execution, which is still unique per render)
- [x] add all node global objects to Compartment globals
  (we decided to not add any new global now,
  and also it is not needed that we expose all globals to user code because it was never done before)
- [x] replace Buffer.allocUnsafe  with Buffer.alloc
- check the compiled exe version
- [x] move the lockdown to the reporter init likely, so it is consistent, now some errors can occur after first render and not before because of lockdown
- EJS doesnt work in lockdown, at least an explanation error should be thrown
- bluebird doesnt work in lockdown, we need to write it down to release notes and blog
- SES doesn't write an error that throws from background timer (scripts test) - we can live with it
- perhaps try to "analyze" the errors from SES and write to exception some explanation for developers and what can be done
- system helpers compilation? not must for now
